{
	"Query Handler": {
		"prefix": "qhandler",
		"body": [
			" public class Query : IRequest<${1:ReturnObject}> { }",
			"        public class Handler : IRequestHandler<Query, ${1:ReturnObject}> {",
			"            private readonly DataContext _context;",
			"            private readonly ILogger<List> _logger;",
			"",
			"            public Handler (DataContext context, ILogger<List> logger) {",
			"                _logger = logger;",
			"                _context = context;",
			"            }",
			"",
			"            public async Task<${1:ReturnObject}> Handle (Query request, CancellationToken cancellationToken) {",
			"",
			"                // handler logic goes here",
			"",
			"                return null;",
			"            }",
			"        }",
			"    }"
		],
		"description": "Query Handler",
	},
	"Command Handler": {
		"prefix": "chandler",
		"body": [
			"public class Command : IRequest",
			"        {",
			"         // Properties here",
			"        }",
			"",
			"        public class Handler : IRequestHandler<Command>",
			"        {",
			"            private readonly DataContext _context;",
			"            public Handler(DataContext context)",
			"            {",
			"                this._context = context;",
			"            }",
			"",
			"            public async Task<Unit> Handle(Command request, CancellationToken cancellationToken)",
			"            {",
			"                // handler logic here",
			"",
			"                var success = await _context.SaveChangesAsync(cancellationToken)>0;",
			"                if (success) return Unit.Value;",
			"",
			"                throw new Exception(\"Problem saving changes\");",
			"",
			"            }",
			"        }"
		],
		"description": "Command Handler"
	}
}